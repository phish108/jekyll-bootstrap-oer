
@import "../_contrib/node_modules/bootstrap/scss/bootstrap";

@include media-breakpoint-up(lg) { 
    :root {
        --bs-body-font-size: 1.2rem;
    }
}

blockquote {
    @extend .alert;
    @extend .alert-secondary;

    border-left-width: 15px;

    blockquote {
        @extend .alert-primary;

        blockquote {
            @extend .alert-warning;
            
            blockquote {
                @extend .alert-danger;

                blockquote {
                    @extend .alert-success;
                }

                &:has(blockquote) {
                    border-left: none;
                    padding: 0;
                    border: none;
                    margin: 0;
                    color: inherit;
                    background-color: inherit;
                }
            }

            &:has(blockquote) {
                border-left: none;
                padding: 0;
                border: none;
                margin: 0;
                color: inherit;
                background-color: inherit;
            }
        }
    }

    &:has(blockquote) {
        border-left: none;
        padding: 0;
        border: none;
        margin: 0;
        color: inherit;
        background-color: inherit;

        &::before {
            content: "";
            display: inherit;
        }
    }

    & p:first-child, & p:last-child {
        margin-bottom: 0;
    }
}

h1 {
    &.page {
        margin-top: 1rem;
    }

    &.chapter {
        margin-top: 4rem;
    }

    &.TOC:first-child {
        margin-top: 3.4rem;
    }
}

div.highlight:has(pre) {
    margin-left: 25px;
    margin-right: 25px;

    pre {
        padding: 10px;
    }
}

.sidebar {
    @extend .col-md-3;
    
    a {
        color: var(--bs-dark);
        text-decoration: none;
    }
}

header {   
    a {
        color: var(--bs-dark);
        text-decoration: none;
    }

    h1 {
        margin-top: 1rem;
        font-weight: bolder;
        font-size: 1.3rem;
        display: block;
        margin-bottom: .5rem;
    }

    .author {
        margin-top: 0;
        font-size: 0.9rem;
        font-style: italic;
    }
}

[lang="en"] {
    .TOC::before {
        content: "Table of Contents";
    }
}

[lang="de"] {
    .TOC::before {
        content: "Inhaltsverzeichnis";
    }
}

.highlighter-rouge {
    position: relative;
    .highlight::before {
        position: absolute;
        z-index: 2;
        top: 0;
        right: 35px;
        font-size: .8rem;
        color: var(--bs-gray-600);
    }

    & > .highlight {
        padding-top: .6rem;
    }
}

.language-R > .highlight::before {
        content: "R";
}

.language-julia > .highlight::before {
    content: "Julia";
}

.language-js > .highlight::before {
    content: "JavaScript";
}

.language-python > .highlight::before {
    content: "Python";
}

.language-perl > .highlight::before {
    content: "Perl";
}

.language-php > .highlight::before {
    content: "PHP";
}

.language-bash > .highlight::before {
    content: "bash";
}

.language-powershell > .highlight::before {
    content: "PowerShell";
}

.language-go > .highlight::before {
    content: "Go";
}

.language-docker > .highlight::before {
    content: "Dockerfile";
}

.language-json > .highlight::before {
    content: "JSON";
}

.language-yaml > .highlight::before {
    content: "YAML";
}

.language-graphql > .highlight::before {
    content: "GraphQL";
}

.language-SQL > .highlight::before {
    content: "SQL";
}

.language-xml > .highlight::before {
    content: "XML";
}

.language-markdown > .highlight::before {
    content: "markdown";
}

pre:has(.language-excel) { 
    position: relative;

    padding: 10px;
    margin-left: 25px;
    margin-right: 20px;
    background-color: #f8f8f8;
    

    .language-excel::before {
        position: absolute;
        top: 0;
        right: 5px;
        content: "MS Excel";
        font-size: .8rem;
        color: var(--bs-gray-600);
    }
}

ul.author {
    list-style: none;
    margin: 0;
    padding: 0;
    font-size: 1rem;
    margin-bottom: 1rem;
    font-style: italic;

    li {
        display: inline;
    }

    li:not(:last-child)::after {
        content: ", ";
    }
}